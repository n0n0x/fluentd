#!/bin/bash
FLUENTD_CONF="/fluentd/etc/fluentd.conf"
INSTALL_BUILD_TOOLS=${INSTALL_BUILD_TOOLS:-"false"}
BUILD_TOOLS='g++ gcc make ruby-dev'

if [ "$INSTALL_BUILD_TOOLS" == "true" ]
then
  echo "Installing Build tools!"
  apk add --update --virtual .build-deps sudo build-base ruby-dev
fi

# is there a broken symlink in /var/log/containers?
BROKEN_LINK="$(find /var/log/containers/ -name '*.log' -type l -xtype l -print -quit)"
if [ -n "$BROKEN_LINK" ]; then
  echo "/var/log/containers contains broken links"
  # extract the containers/ directory targeted by the broken symlink
  TARGET_DIR="$(readlink -m "$BROKEN_LINK" | sed 's/\(.*containers\).*/\1/')"
  # create the parent of the target directory
  mkdir -p "$(dirname "$TARGET_DIR")"
  # symlink the /var/lib/docker/containers volume to the target
  # directory, assuming that's how things are on the host machine
  ln -s /var/lib/docker/containers "$TARGET_DIR"
  echo "linked /var/lib/docker/containers to $TARGET_DIR"
fi

source /fluentd/sbin/plugins
source /fluentd/sbin/sources
source /fluentd/sbin/filters/filters

if [ -n "$DROP_FLUENTD_LOGS" ]
then
cat << EOF >> $FLUENTD_CONF
<match fluent.**>
  type null
</match>
EOF
fi

# If you want to ONLY  log deis router logs to elasticsearch
# then we Gclose the previous <match> tag and create a new one
# just for matching deis-router logs. Output would be like:
# <match kubernetes.var.log.containers.deis-router-**.log>
#   @type copy
# <store>
#   @type elasticsearch
#   ...
# </store>
# </match>
if [ -n "${ELASTICSEARCH_DEIS_ROUTER_LOGS_ONLY}" ]
then
cat << EOF >> $FLUENTD_CONF
<match kubernetes.var.log.containers.deis-router-**.log>
  @type copy
EOF

source /fluentd/sbin/stores/stores

cat << EOF >> $FLUENTD_CONF
</match>
EOF
fi

cat << EOF >> $FLUENTD_CONF
<match **>
  @type copy
EOF

source /fluentd/sbin/stores/stores

cat << EOF >> $FLUENTD_CONF
</match>
EOF

if [ "$INSTALL_BUILD_TOOLS" == "true" ]
then
  echo "Removing Build tools!"
  sudo gem sources --clear-all
  apk del .build-deps
  rm -rf /var/cache/apk/* /root/.gem/ruby/*/cache/*.gem
fi

exec fluentd -c $FLUENTD_CONF
